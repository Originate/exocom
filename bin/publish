#!/usr/bin/env lsc

require! {
  'chalk' : {bold, red, cyan, yellow, green}
  'inquirer'
  'path'
  'semver'
  'shelljs/global'
}

EXOCOM_SUBPROJECT = 'go/exocom'

JS_PROJECTS_TO_PUBLISH = <[ javascript/exocom-lint
                            javascript/exocom-mock
                            javascript/exorelay
                            javascript/exoservice  ]>

ALL_PROJECTS_TO_PUBLISH = [EXOCOM_SUBPROJECT].concat(JS_PROJECTS_TO_PUBLISH)

function main
  if process.argv.length != 3
    display-help!

  @level = process.argv[2]
  display-help! if @level in ['-h, --help']

  @root-dir = process.cwd!
  @current-version = get-current-version!
  @target-version = get-target-version @current-version, @level

  <- confirm-target-version

  # verify workspace is clean
  ensure-in-root-dir!
  ensure-no-open-files!
  ensure-on-master!

  # ensure subprojects are the same version
  verify-subproject-versions!

  # update version and push tags, ci will publish
  bump-version-numbers!
  push-version-numbers!
  push-git-tags!


function get-current-version
  cd EXOCOM_SUBPROJECT
  run-command './bin/build'
  output = run-command 'exocom version', silent: true
  cd @root-dir
  output.trim()


function verify-subproject-versions current-version
  console.log green "Verifying subproject version numbers...\n"
  for subproject in JS_PROJECTS_TO_PUBLISH
    subproject-version = require("#{@root-dir}/#{subproject}/package.json").version
    if subproject-version isnt @current-version
      console.log red "'#{subproject}' subproject has version #{subproject-version} while exocom has version #{current-version}. Ensure all projects have the same version."
      process.exit 1
  console.log!


function bump-version-numbers
  console.log green "Bumping subproject version numbers...\n"
  run-command-in-subdirs "npm version #{@level}", JS_PROJECTS_TO_PUBLISH
  run-command-in-subdir "sed -i '' 's/#{current-version}/#{target-version}/g' src/cmd/version.go", EXOCOM_SUBPROJECT
  console.log!


function push-version-numbers
  console.log green "Pushing version numbers...\n"
  run-command "git add -u && git commit -m #{@target-version} && git push"
  console.log!


function push-git-tags
  console.log green "Pushing git release tag...\n"
  run-command "git tag -a v#{@target-version} -m v#{@target-version} && git push --tags"
  console.log!


function run-command command, options
  {code, stdout} = exec command, options
  if code > 0 then process.exit 1
  stdout


function run-command-in-subdirs command, subdirs
  for directory in subdirs
    run-command-in-subdir command, directory


function run-command-in-subdir command, directory
  console.log "Running #{yellow command} in subproject #{cyan directory}"
  cd directory
  run-command command
  cd @root-dir
  console.log!


function get-target-version version, level
  target-version = semver.inc version, level
  unless target-version
    console.log "\n#{bold red 'Error:'} #{bold cyan level} #{red 'is not a valid version increment'}"
    display-help!
  target-version


function confirm-target-version done
  console.log "\nYou are about to bump #{cyan bold @current-version} up to #{cyan bold @target-version}\n"
  question =
    type: 'list'
    name: 'continue'
    message: 'Are you sure?'
    choices: ['yes', 'no']
  inquirer.prompt([question]).then (answer) ->
    if answer.continue == 'no'
      console.log '\nAborting ...\n'
      process.exit!
    console.log!
    done!


function ensure-no-open-files
  open-files = exec "git status --porcelain", silent: yes
  if open-files.stdout then console.log red 'Please commit all files before releasing' ; process.exit 1


function ensure-on-master
  current-branch = exec "git rev-parse --abbrev-ref HEAD", silent: yes
  if current-branch.trim! isnt 'master' then console.log red 'You must be on the master branch to publish' ; process.exit 1


function ensure-in-root-dir
  if path.basename(process.cwd!) isnt 'exocom'
    console.log red 'You must be in the root directory to publish' ; process.exit 1


function display-help
  console.log "\nUsage:\n\n  #{bold 'publish <patch|minor|major>'}\n"
  process.exit 1

main!
